{"version":3,"sources":["helper.js","components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["ItemTypes","localStorageKey","setLocalStorage","key","value","localStorage","setItem","JSON","stringify","Header","props","useDrop","accept","drop","item","monitor","onDelete","id","collect","isOver","delRef","ref","Footer","year","Date","getFullYear","Note","useDrag","type","isDragging","noteRef","className","style","opacity","title","content","onClick","CreateArea","useState","note","setNote","isClicked","setClick","handleChange","event","target","name","prevNote","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","App","storage","getItem","hasLocalData","data","parse","getFromLocalStorage","notes","setNotes","deleteNote","prevNotes","updatedNotes","filter","noteItem","index","newNote","map","ReactDOM","render","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.68134e2c.chunk.js","sourcesContent":["// CONSTANTS\r\nexport const ItemTypes = {\r\n    Note: \"Note\",\r\n}\r\n\r\nexport const localStorageKey = 'Notes';\r\n\r\n// FUNCTIONS\r\nexport function getFromLocalStorage(key) {\r\n\r\n    const storage = localStorage.getItem(key);\r\n\r\n    if (storage) {\r\n\r\n        return {\r\n            hasLocalData: true,\r\n            data: JSON.parse(storage)\r\n        };\r\n    }\r\n    return {\r\n        hasLocalData: false,\r\n        data: null\r\n    };\r\n}\r\n\r\nexport function setLocalStorage(key, value) {\r\n    if (key && value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../helper';\r\n\r\nfunction Header(props) {\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [{ isOver }, delRef] = useDrop({\r\n        accept: ItemTypes.Note,\r\n        drop: (item, monitor) => {\r\n            props.onDelete(item.id);\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <header>\r\n            <h1>\r\n                Keeper App\r\n            </h1>\r\n            <button ref={delRef}><DeleteIcon /></button>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <p>Copyright â“’ {year}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from '../helper.js';\r\n\r\nfunction Note(props) {\r\n\r\n    const [{ isDragging }, noteRef] = useDrag({\r\n        type: ItemTypes.Note,\r\n        item: () => ({\r\n            id: props.id\r\n        }),\r\n        collect: monitor => ({\r\n            isDragging: !!monitor.isDragging()\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <div className=\"note\" style={{ opacity: isDragging ? 0.5 : 1 }} ref={noteRef}>\r\n            <h1>\r\n                {props.title}\r\n            </h1>\r\n            <p>\r\n                {props.content}\r\n            </p>\r\n            <button onClick={() => { props.onDelete(props.id) }}><DeleteIcon /></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n\r\n  const [isClicked , setClick] = useState(false); \r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setNote(prevNote => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n    props.onAdd(note);\r\n    setNote({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n        { isClicked && <input\r\n          name=\"title\"\r\n          onChange={handleChange}\r\n          value={note.title}\r\n          placeholder=\"Title\"\r\n        />}\r\n        <textarea\r\n          name=\"content\"\r\n          onClick={()=>{setClick(true)}}\r\n          onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\"\r\n          rows={ isClicked ? \"3\" : \"1\"}\r\n        />\r\n        <Zoom in={isClicked}><Fab onClick={submitNote}><AddIcon /></Fab></Zoom>\r\n      </form>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default CreateArea;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateArea from \"./CreateArea\";\r\nimport { localStorageKey, getFromLocalStorage, setLocalStorage } from '../helper.js';\r\n\r\nfunction App() {\r\n    const [notes, setNotes] = useState(() => {\r\n        const storage = getFromLocalStorage(localStorageKey);\r\n        return storage.hasLocalData ? storage.data : [];\r\n    });\r\n\r\n    function addNote(newNote) {\r\n        setNotes(prevNotes => {\r\n            const updatedNotes = [...prevNotes, newNote];\r\n            setLocalStorage(localStorageKey, updatedNotes);\r\n            return updatedNotes;\r\n        });\r\n    }\r\n\r\n    function deleteNote(id) {\r\n        setNotes(prevNotes => {\r\n            const updatedNotes = prevNotes.filter((noteItem, index) => {\r\n                return index !== id;\r\n            });\r\n            setLocalStorage(localStorageKey, updatedNotes);\r\n            return updatedNotes;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header onDelete={deleteNote} />\r\n            <CreateArea onAdd={addNote} />\r\n            <div className=\"note-container\">\r\n                {notes.map((noteItem, index) => {\r\n                    return (\r\n                        <Note\r\n                            key={`${index}-note`}\r\n                            id={index}\r\n                            title={noteItem.title}\r\n                            content={noteItem.content}\r\n                            onDelete={deleteNote}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nReactDOM.render(\n    <DndProvider backend={HTML5Backend}>\n        <App />\n    </DndProvider>, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}